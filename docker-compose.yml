services:
  storage-webapi:
    container_name: storage-webapi
    image: ${DOCKER_REGISTRY-}image-hosting-storage-webapi
    build:
      context: .
      dockerfile: src/ImageHosting.Storage.WebApi/Dockerfile
    environment:
      Serilog__Using__0: "Serilog.Sinks.Console"
      Serilog__MinimumLevel__Default: Information
      Serilog__MinimumLevel__Override__Microsoft.AspNetCore: Warning
      Serilog__MinimumLevel__Override__Microsoft.EntityFrameworkCore: Warning
      Serilog__WriteTo__0__Name: Console
      Kafka__BootstrapServers__0: kafka:9092
      Kafka__NewImagesProducer__TopicName: new-images.v1
      Minio__Endpoint: minio:9000
      Images__PublicUrl: "http://localhost:8080"
    depends_on:
      - minio
      - postgres
      - kafka
      - kafka-init-new-images

  image-tagger:
    container_name: image-tagger
    image: ${DOCKER_REGISTRY-}image-hosting-storage-tagger
    build:
      context: .
      dockerfile: src/ImageHosting.Storage.Tagger/Dockerfile
    environment:
      Logging__LogLevel__Default: Information
      Logging__LogLevel__Microsoft.AspNetCore: Warning
      Logging__LogLevel__Microsoft.EntityFrameworkCore: Warning
      AssignTags__Threshold: 0.8
      AssignTagsConsumer__BootstrapServers__0: kafka:9092
      AssignTagsConsumer__TopicName: "categories.v1"
      AssignTagsConsumer__GroupId: image-tagger
    depends_on:
      - postgres
      - kafka
      - kafka-init-categories
      
  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2024-09-13T20-26-02Z
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data
  
  postgres:
    container_name: postgres
    image: postgres:16.4-alpine3.20
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.8
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_KRAFT_CLUSTER_ID: LelM2dIFQkiUFvXCEcqRWA
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
    volumes:
      - kafka-data:/bitnami/kafka
  
  kafka-init-new-images:
    container_name: kafka-init-new-images
    image: bitnami/kafka:3.8
    depends_on:
      - kafka
    entrypoint: "kafka-topics.sh"
    command: [
      "--bootstrap-server", "kafka:9092",
      "--create",
      "--topic", "new-images.v1",
      "--partitions", "2",
      "--replication-factor", "1"
    ]
  
  kafka-init-categories:
    container_name: kafka-init-categories
    image: bitnami/kafka:3.8
    depends_on:
      - kafka
    entrypoint: "kafka-topics.sh"
    command: [
      "--bootstrap-server", "kafka:9092",
      "--create",
      "--topic", "categories.v1",
      "--partitions", "2",
      "--replication-factor", "1"
    ]
    
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: image-hosting
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      
  resizer:
    container_name: resizer
    image: ghcr.io/baklanov-soft/image-hosting-processing-resizer:master
    depends_on:
      - kafka-init-new-images
      - minio
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONSUMER_GROUP_ID: resizer-local-test
      MINIO_HOST: "http://minio:9000"
      
  recognizer:
    container_name: recognizer
    image: ghcr.io/baklanov-soft/image-hosting-processing-recognizer:master
    depends_on:
      - kafka-init-new-images
      - kafka-init-categories
      - minio
    volumes:
      - recognizer-djl-cache:/root/.djl.ai
      - "./recognizer/synset.txt:/opt/app/nsfw/synset.txt"
      # download it from here https://huggingface.co/DenisNovac/nsfw_image_detection/
      - "./recognizer/nsfw_model.pt:/opt/app/nsfw/nsfw_model.pt"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONSUMER_GROUP_ID: recognizer-local-test
      NEW_IMAGES_TOPIC: "new-images.v1"
      CATEGORIES_TOPIC: "categories.v1"
      ENABLE_NSFW_DETECTION: true
      NSFW_SYNSET_PATH: "nsfw/synset.txt"
      NSFW_MODEL_PATH: "nsfw/nsfw_model.pt"
      MINIO_HOST: "http://minio:9000"


volumes:
  minio-data:
  db-data:
  kafka-data:
  recognizer-djl-cache: