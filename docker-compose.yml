services:
  image-hosting-storage:
    container_name: image-hosting-storage
    image: ghcr.io/baklanov-soft/image-hosting-storage:master
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      Logging__LogLevel__Default: Information
      Logging__LogLevel__Microsoft.AspNetCore: Warning
      Logging__LogLevel__Microsoft.EntityFrameworkCore: Warning
      Minio__Endpoint: minio:9000
      Minio__AccessKey: minioadmin
      Minio__SecretKey: minioadmin
      Minio__Secure: false
      ConnectionStrings__ImageHosting: "Host=postgres;Port=5432;Database=image_hosting;Username=image_hosting;Password=P@ssw0rd;Include Error Detail=true"
      ASPNETCORE_ENVIRONMENT: Development
      Kafka__BootstrapServers__0: kafka:9092
      Kafka__NewImagesProducer__TopicName: new-images.v1
      Kafka__CategoriesConsumer__TopicName: categories.v1
      Kafka__CategoriesConsumer__GroupId: image-tagger
      Kafka__CategoriesConsumer__Threshold: 0.8
      Images__BaseUri: "localhost:8080"
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - minio
      - postgres
      - kafka
      - kafka-init-new-images
      - kafka-init-categories

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2024-01-31T20-20-33Z
    command: server --console-address ":9001" /data
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
  
  postgres:
    container_name: postgres
    image: postgres:16-alpine3.18
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: image_hosting
      POSTGRES_USER: image_hosting
      POSTGRES_PASSWORD: P@ssw0rd
    ports:
      - "127.0.0.1:5432:5432"
    command: [ "postgres", "-c", "log_statement=all" ]

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.6.1
    ports:
      - "127.0.0.1:9094:9094"
    environment:
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: INTERNAL://kafka:9092,CONTROLLER://kafka:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # cluster config
      KAFKA_KRAFT_CLUSTER_ID: LelM2dIFQkiUFvXCEcqRWA
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
    volumes:
      - kafka-data:/bitnami/kafka
  
  kafka-init-new-images:
    container_name: kafka-init-new-images
    image: bitnami/kafka:3.6.1
    depends_on:
      - kafka
    entrypoint: "kafka-topics.sh"
    command: [
      "--bootstrap-server", "kafka:9092",
      "--create",
      "--topic", "new-images.v1",
      "--partitions", "2",
      "--replication-factor", "1"
    ]
  
  kafka-init-categories:
    container_name: kafka-init-categories
    image: bitnami/kafka:3.6.1
    depends_on:
      - kafka
    entrypoint: "kafka-topics.sh"
    command: [
      "--bootstrap-server", "kafka:9092",
      "--create",
      "--topic", "categories.v1",
      "--partitions", "2",
      "--replication-factor", "1"
    ]

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "127.0.0.1:8000:8000"
    environment:
      SERVER_PORT: 8000
      KAFKA_CLUSTERS_0_NAME: image-hosting
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

  resizer:
    image: ghcr.io/baklanov-soft/image-hosting-processing-resizer:master
    container_name: resizer
    depends_on:
      - kafka-init-new-images
      - minio
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONSUMER_GROUP_ID: resizer-local-test
      MINIO_HOST: "http://minio:9000"
      MINIO_USER: minioadmin
      MINIO_PASSWORD: minioadmin

  recognizer:
    image: ghcr.io/baklanov-soft/image-hosting-processing-recognizer:master
    container_name: recognizer
    depends_on:
      - kafka-init-new-images
      - kafka-init-categories
      - minio
    volumes:
      - recognizer-djl-cache:/root/.djl.ai
      - "./recognizer/synset.txt:/opt/app/nsfw/synset.txt"
      # download it from here https://huggingface.co/DenisNovac/nsfw_image_detection/
      - "./recognizer/nsfw_model.pt:/opt/app/nsfw/nsfw_model.pt"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONSUMER_GROUP_ID: recognizer-local-test
      NEW_IMAGES_TOPIC: "new-images.v1"
      CATEGORIES_TOPIC: "categories.v1"
      ENABLE_NSFW_DETECTION: true
      NSFW_SYNSET_PATH: "nsfw/synset.txt"
      NSFW_MODEL_PATH: "nsfw/nsfw_model.pt"
      MINIO_HOST: "http://minio:9000"
      MINIO_USER: minioadmin
      MINIO_PASSWORD: minioadmin
      DEBUG_CATEGORIES: true

volumes:
  minio-data:
  db-data:
  kafka-data:
  recognizer-djl-cache: